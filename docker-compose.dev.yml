services:
  db:
    image: pgvector/pgvector:pg17
    container_name: dev-blog-postgres
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${PG_EXTERNAL_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: dev-blog-redis
    restart: always
    ports:
      - "${REDIS_EXTERNAL_PORT}:6379"

  pgadmin:
    image: dpage/pgadmin4
    container_name: dev-blog-pgadmin
    restart: always
    env_file:
      - .env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "${PGADMIN_PORT}:80"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: dev-backend-go-app
    env_file:
      - .env
    ports:
      - "${APP_PORT}:${APP_PORT}"
    volumes:
      - ./backend:/app
    restart: always
    depends_on:
      - db
      - redis
    extra_hosts:
      - "host.docker.internal:host-gateway"
  
  searxng:
    image: docker.io/searxng/searxng:latest
    container_name: searxng
    env_file:
      - .env
    restart: unless-stopped
    volumes:
      - ./searxng:/etc/searxng:rw
      - searxng-data:/var/cache/searxng:rw
    environment:
      - SEARXNG_SECRET=${SEARXNG_SECRET}
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"

  extractor:
    build:
      context: ./extractor
      dockerfile: Dockerfile
    container_name: dev-extractor
    environment:
      TESS_LANGS: tha+eng
      FLASK_ENV: production
    ports:
      - "5002:5002"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:5002/healthz || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5
    depends_on:
      - backend

volumes:
  postgres_data:
  searxng-data:
